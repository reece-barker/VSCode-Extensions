{
    "template": {
        "prefix": "template",
        "body": [
            "<template>",
            "\t$1",
            "</template>"
        ],
        "description": "template element"
    },
    "v-text": {
        "prefix": "vText",
        "body": [
            "v-text=\"${1:msg}\""
        ],
        "description": "v-text"
    },
    "v-html": {
        "prefix": "vHtml",
        "body": [
            "v-html=\"${1:html}\""
        ],
        "description": "v-html"
    },
    "v-show": {
        "prefix": "vShow",
        "body": [
            "v-show=\"${1:condition}\""
        ],
        "description": "v-show 是否显示"
    },
    "v-if": {
        "prefix": "vIf",
        "body": [
            "v-if=\"${1:condition}\""
        ],
        "description": "v-if"
    },
    "v-else": {
        "prefix": "vElse",
        "body": [
            "v-else"
        ],
        "description": ""
    },
    "v-else-if": {
        "prefix": "vElseIf",
        "body": [
            "v-else-if=\"${1:condition}\""
        ],
        "description": "Expects: any. previous sibling element must have v-if or v-else-if."
    },
    "v-for-without-key": {
        "prefix": "vForWithoutKey",
        "body": [
            "v-for=\"${1:item} in ${2:items}\""
        ],
        "description": "无key的v-for"
    },
    "v-for": {
        "prefix": "vFor",
        "body": [
            "v-for=\"(${1:item}, ${2:index}) in ${3:items}\" :key=\"${4:index}\""
        ],
        "description": "有key的v-for"
    },
    "v-on": {
        "prefix": "vOn",
        "body": [
            "v-on:${1:event}=\"${2:handle}\""
        ],
        "description": "绑定事件"
    },
    "v-bind": {
        "prefix": "vBind",
        "body": [
            "v-bind$1=\"${2}\""
        ],
        "description": "绑定属性"
    },
    "v-model": {
        "prefix": "vModel",
        "body": [
            "v-model=\"${1:something}\""
        ],
        "description": "双向绑定 表单控件常用"
    },
    "v-pre": {
        "prefix": "vPre",
        "body": [
            "v-pre"
        ],
        "description": "不编译"
    },
    "v-cloak": {
        "prefix": "vCloak",
        "body": [
            "v-cloak"
        ],
        "description": "编译结束前不显示"
    },
    "v-once": {
        "prefix": "vOnce",
        "body": [
            "v-once"
        ],
        "description": "只渲染一次"
    },
    "key": {
        "prefix": "key",
        "body": [
            ":key=\"${1:key}\""
        ],
        "description": "v-for的key"
    },
    "ref": {
        "prefix": "ref",
        "body": [
            "ref=\"${1:reference}\"$0"
        ],
        "description": "vue的元素选择器，需预先定义"
    },
    "slotA": {
        "prefix": "slotA",
        "body": [
            "slot=\"$1\"$0"
        ],
        "description": "slot=''. Expects: string. Used on content inserted into child components to indicate which named slot the content belongs to."
    },
    "slotE": {
        "prefix": "slotE",
        "body": [
            "<slot$1>$2</slot>$0"
        ],
        "description": "<slot></slot>. Expects: string. Used on content inserted into child components to indicate which named slot the content belongs to."
    },
    "slotScope": {
        "prefix": "slotScope",
        "body": [
            "slot-scope=\"$1\"$0"
        ],
        "description": "Used to denote an element or component as a scoped slot. The attribute’s value should be a valid JavaScript expression that can appear in the argument position of a function signature. This means in supported environments you can also use ES2015 destructuring in the expression. Serves as a replacement for scope in 2.5.0+."
    },
    "component": {
        "prefix": "component",
        "body": [
            "<component :is=\"${1:componentId}\"></component>$0"
        ],
        "description": "component element"
    },
    "keep-alive": {
        "prefix": "keepAlive",
        "body": [
            "<keep-alive$1>",
            "$2",
            "</keep-alive>$0"
        ],
        "description": "保留组件状态"
    },
    "transition": {
        "prefix": "transition",
        "body": [
            "<transition name=\"$1\">",
            "$2",
            "</transition>$0"
        ],
        "description": "单个元素/组件的过渡效果"
    },
    "transition-group": {
        "prefix": "transitionGroup",
        "body": [
            "<transition-group$1>",
            "$2",
            "</transition-group>"
        ],
        "description": "多个元素/组件的过渡效果"
    },
    "enter-class": {
        "prefix": "enterClass",
        "body": [
            "enter-class=\"$1\"$0"
        ],
        "description": "enter-class=''. Expects: string."
    },
    "leave-class": {
        "prefix": "leaveClass",
        "body": [
            "leave-class=\"$1\"$0"
        ],
        "description": "leave-class=''. Expects: string."
    },
    "appear-class": {
        "prefix": "appearClass",
        "body": [
            "appear-class=\"$1\"$0"
        ],
        "description": "appear-class=''. Expects: string."
    },
    "enter-to-class": {
        "prefix": "enterToClass",
        "body": [
            "enter-to-class=\"$1\"$0"
        ],
        "description": "enter-to-class=''. Expects: string."
    },
    "leave-to-class": {
        "prefix": "leaveToClass",
        "body": [
            "leave-to-class=\"$1\"$0"
        ],
        "description": "leave-to-class=''. Expects: string."
    },
    "appear-to-class": {
        "prefix": "appearToClass",
        "body": [
            "appear-to-class=\"$1\"$0"
        ],
        "description": "appear-to-class=''. Expects: string."
    },
    "enter-active-class": {
        "prefix": "enterActiveClass",
        "body": [
            "enter-active-class=\"$1\"$0"
        ],
        "description": "enter-active-class=''. Expects: string."
    },
    "leave-active-class": {
        "prefix": "leaveActiveClass",
        "body": [
            "leave-active-class=\"$1\"$0"
        ],
        "description": "leave-active-class=''. Expects: string."
    },
    "appear-active-class": {
        "prefix": "appearActiveClass",
        "body": [
            "appear-active-class=\"$1\"$0"
        ],
        "description": "appear-active-class=''. Expects: string."
    },
    "before-enter": {
        "prefix": "beforeEnterEvent",
        "body": [
            "@before-enter=\"$1\"$0"
        ],
        "description": "@before-enter=''"
    },
    "before-leave": {
        "prefix": "beforeLeaveEvent",
        "body": [
            "@before-leave=\"$1\"$0"
        ],
        "description": "@before-leave=''"
    },
    "before-appear": {
        "prefix": "beforeAppearEvent",
        "body": [
            "@before-appear=\"$1\"$0"
        ],
        "description": "@before-appear=''"
    },
    "enter": {
        "prefix": "enterEvent",
        "body": [
            "@enter=\"$1\"$0"
        ],
        "description": "@enter=''"
    },
    "leave": {
        "prefix": "leaveEvent",
        "body": [
            "@leave=\"$1\"$0"
        ],
        "description": "@leave=''"
    },
    "appear": {
        "prefix": "appearEvent",
        "body": [
            "@appear=\"$1\"$0"
        ],
        "description": "@appear=''"
    },
    "after-enter": {
        "prefix": "afterEnterEvent",
        "body": [
            "@after-enter=\"$1\"$0"
        ],
        "description": "@after-enter=''"
    },
    "after-leave": {
        "prefix": "afterLeaveEvent",
        "body": [
            "@after-leave=\"$1\"$0"
        ],
        "description": "@after-leave=''"
    },
    "after-appear": {
        "prefix": "afterAppearEvent",
        "body": [
            "@after-appear=\"$1\"$0"
        ],
        "description": "@after-appear=''"
    },
    "enter-cancelled": {
        "prefix": "enterCancelledEvent",
        "body": [
            "@enter-cancelled=\"$1\"$0"
        ],
        "description": "@enter-cancelled=''"
    },
    "leave-cancelled": {
        "prefix": "leaveCancelledEvent",
        "body": [
            "@leave-cancelled=\"$1\"$0"
        ],
        "description": "@leave-cancelled='' (v-show only)"
    },
    "appear-cancelled": {
        "prefix": "appearCancelledEvent",
        "body": [
            "@appear-cancelled=\"$1\"$0"
        ],
        "description": "@appear-cancelled=''"
    },
    "routerLink": {
        "prefix": "routerLink",
        "body": [
            "<router-link $1>$2</router-link>$0"
        ],
        "description": "<router-link></router-link>"
    },
    "routerLinkTo": {
        "prefix": "routerLinkTo",
        "body": [
            "<router-link to=\"$1\">$2</router-link>$0"
        ],
        "description": "<router-link to=''></router-link>"
    },
    "to": {
        "prefix": "to",
        "body": [
            "to=\"$1\"$0"
        ],
        "description": "to=''"
    },
    "tag": {
        "prefix": "tag",
        "body": [
            "tag=\"$1\"$0"
        ],
        "description": "tag=''"
    },
    "routerView": {
        "prefix": "routerView",
        "body": [
            "<router-view>$1</router-view>$0"
        ],
        "description": "<router-view></router-view>"
    },
    "routerViewWithKey": {
        "prefix": "routerView",
        "body": [
            "<!-- computed对象下输入key以使用配套的解决方案key -->",
            "<router-view :key=\"key\">$1</router-view>$0"
        ],
        "description": "路由参数变化重新渲染解决方案"
    }
}